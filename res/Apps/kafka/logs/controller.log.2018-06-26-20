[2018-06-26 20:00:04,810] DEBUG [Controller id=0] Delete topics listener fired for topics framefeeder to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:00:04,810] INFO [Controller id=0] Starting topic deletion for topics framefeeder (kafka.controller.KafkaController)
[2018-06-26 20:00:04,810] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,811] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,811] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder (re)started (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,811] INFO [Topic Deletion Manager 0], Topic deletion callback for framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,813] INFO [Topic Deletion Manager 0], Partition deletion callback for framefeeder-0 (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,813] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OfflineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,814] DEBUG [Controller id=0] Removing replica 0 from ISR 0 for partition framefeeder-0. (kafka.controller.KafkaController)
[2018-06-26 20:00:04,816] INFO [Controller id=0] Retaining last ISR 0 of partition framefeeder-0 since unclean leader election is disabled (kafka.controller.KafkaController)
[2018-06-26 20:00:04,829] INFO [Controller id=0] New leader and ISR for partition framefeeder-0 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2018-06-26 20:00:04,829] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:00:04,829] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:00:04,829] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,829] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionStarted for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,832] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:00:04,832] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:00:04,853] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@9f9bcab (kafka.controller.KafkaController)
[2018-06-26 20:00:04,853] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,854] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,854] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,854] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,854] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NonExistentReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:04,855] INFO [PartitionStateMachine controllerId=0] Invoking state change to OfflinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:04,855] INFO [PartitionStateMachine controllerId=0] Invoking state change to NonExistentPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:04,890] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder successfully completed (kafka.controller.TopicDeletionManager)
[2018-06-26 20:00:04,891] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2018-06-26 20:00:04,895] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:00:22,275] INFO [Controller id=0] New topics: [Set(framefeeder)], deleted topics: [Set()], new partition replica assignment [Map(framefeeder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2018-06-26 20:00:22,276] INFO [Controller id=0] New topic creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:00:22,276] INFO [Controller id=0] New partition creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:00:22,276] INFO [PartitionStateMachine controllerId=0] Invoking state change to NewPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:22,276] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NewReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:00:22,277] INFO [PartitionStateMachine controllerId=0] Invoking state change to OnlinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:22,277] DEBUG [PartitionStateMachine controllerId=0] Live assigned replicas for partition framefeeder-0 are: [List(0)] (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:22,277] DEBUG [PartitionStateMachine controllerId=0] Initializing leader and isr for partition framefeeder-0 to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3) (kafka.controller.PartitionStateMachine)
[2018-06-26 20:00:22,305] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OnlineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,921] DEBUG [Controller id=0] Delete topics listener fired for topics framefeeder to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:01:02,921] INFO [Controller id=0] Starting topic deletion for topics framefeeder (kafka.controller.KafkaController)
[2018-06-26 20:01:02,921] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,922] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,922] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder (re)started (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,922] INFO [Topic Deletion Manager 0], Topic deletion callback for framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,925] INFO [Topic Deletion Manager 0], Partition deletion callback for framefeeder-0 (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,925] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OfflineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,925] DEBUG [Controller id=0] Removing replica 0 from ISR 0 for partition framefeeder-0. (kafka.controller.KafkaController)
[2018-06-26 20:01:02,941] INFO [Controller id=0] Retaining last ISR 0 of partition framefeeder-0 since unclean leader election is disabled (kafka.controller.KafkaController)
[2018-06-26 20:01:02,946] INFO [Controller id=0] New leader and ISR for partition framefeeder-0 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2018-06-26 20:01:02,946] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:01:02,946] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:01:02,946] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,946] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionStarted for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,947] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:01:02,947] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:01:02,970] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1d7bc33e (kafka.controller.KafkaController)
[2018-06-26 20:01:02,970] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,971] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,971] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:02,971] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,972] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NonExistentReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:01:02,972] INFO [PartitionStateMachine controllerId=0] Invoking state change to OfflinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:01:02,972] INFO [PartitionStateMachine controllerId=0] Invoking state change to NonExistentPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:01:03,002] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder successfully completed (kafka.controller.TopicDeletionManager)
[2018-06-26 20:01:03,003] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2018-06-26 20:01:03,004] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:04:26,775] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:04:26,776] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2018-06-26 20:08:37,667] INFO [Controller id=0] New topics: [Set(framefeeder)], deleted topics: [Set()], new partition replica assignment [Map(framefeeder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2018-06-26 20:08:37,667] INFO [Controller id=0] New topic creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:08:37,669] INFO [Controller id=0] New partition creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:08:37,669] INFO [PartitionStateMachine controllerId=0] Invoking state change to NewPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:08:37,670] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NewReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:08:37,672] INFO [PartitionStateMachine controllerId=0] Invoking state change to OnlinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:08:37,672] DEBUG [PartitionStateMachine controllerId=0] Live assigned replicas for partition framefeeder-0 are: [List(0)] (kafka.controller.PartitionStateMachine)
[2018-06-26 20:08:37,672] DEBUG [PartitionStateMachine controllerId=0] Initializing leader and isr for partition framefeeder-0 to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3) (kafka.controller.PartitionStateMachine)
[2018-06-26 20:08:37,696] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OnlineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,053] DEBUG [Controller id=0] Delete topics listener fired for topics framefeeder to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:09:23,053] INFO [Controller id=0] Starting topic deletion for topics framefeeder (kafka.controller.KafkaController)
[2018-06-26 20:09:23,053] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,053] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,054] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder (re)started (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,054] INFO [Topic Deletion Manager 0], Topic deletion callback for framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,054] INFO [Topic Deletion Manager 0], Partition deletion callback for framefeeder-0 (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,055] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OfflineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,055] DEBUG [Controller id=0] Removing replica 0 from ISR 0 for partition framefeeder-0. (kafka.controller.KafkaController)
[2018-06-26 20:09:23,059] INFO [Controller id=0] Retaining last ISR 0 of partition framefeeder-0 since unclean leader election is disabled (kafka.controller.KafkaController)
[2018-06-26 20:09:23,064] INFO [Controller id=0] New leader and ISR for partition framefeeder-0 is {"leader":-1,"leader_epoch":1,"isr":[0]} (kafka.controller.KafkaController)
[2018-06-26 20:09:23,064] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:09:23,064] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:09:23,064] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,065] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionStarted for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,065] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:09:23,065] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2018-06-26 20:09:23,087] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@363f3de8 (kafka.controller.KafkaController)
[2018-06-26 20:09:23,087] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,087] INFO [ReplicaStateMachine controllerId=0] Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,088] INFO [Topic Deletion Manager 0], Handling deletion for topics framefeeder (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,088] DEBUG [ReplicaStateMachine controllerId=0] Are all replicas for topic framefeeder deleted Map([Topic=framefeeder,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,088] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NonExistentReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:23,088] INFO [PartitionStateMachine controllerId=0] Invoking state change to OfflinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:23,088] INFO [PartitionStateMachine controllerId=0] Invoking state change to NonExistentPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:23,127] INFO [Topic Deletion Manager 0], Deletion of topic framefeeder successfully completed (kafka.controller.TopicDeletionManager)
[2018-06-26 20:09:23,127] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2018-06-26 20:09:23,131] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2018-06-26 20:09:26,776] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:09:26,776] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2018-06-26 20:09:47,360] INFO [Controller id=0] New topics: [Set(framefeeder)], deleted topics: [Set()], new partition replica assignment [Map(framefeeder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2018-06-26 20:09:47,360] INFO [Controller id=0] New topic creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:09:47,361] INFO [Controller id=0] New partition creation callback for framefeeder-0 (kafka.controller.KafkaController)
[2018-06-26 20:09:47,361] INFO [PartitionStateMachine controllerId=0] Invoking state change to NewPartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:47,361] INFO [ReplicaStateMachine controllerId=0] Invoking state change to NewReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:09:47,362] INFO [PartitionStateMachine controllerId=0] Invoking state change to OnlinePartition for partitions framefeeder-0 (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:47,362] DEBUG [PartitionStateMachine controllerId=0] Live assigned replicas for partition framefeeder-0 are: [List(0)] (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:47,362] DEBUG [PartitionStateMachine controllerId=0] Initializing leader and isr for partition framefeeder-0 to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3) (kafka.controller.PartitionStateMachine)
[2018-06-26 20:09:47,401] INFO [ReplicaStateMachine controllerId=0] Invoking state change to OnlineReplica for replicas [Topic=framefeeder,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2018-06-26 20:14:26,776] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:14:26,777] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:14:26,777] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:14:26,777] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:19:26,777] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:19:26,778] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:19:26,778] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:19:26,778] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:24:26,778] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:24:26,778] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:24:26,778] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:24:26,779] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:29:26,779] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:29:26,779] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:29:26,779] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:29:26,779] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:34:26,779] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:34:26,780] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:34:26,780] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:34:26,780] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:39:26,780] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:39:26,781] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:39:26,781] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:39:26,781] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:44:26,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:44:26,781] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:44:26,781] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:44:26,781] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:49:26,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:49:26,782] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:49:26,782] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:49:26,782] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:54:26,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:54:26,783] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:54:26,783] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:54:26,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-06-26 20:59:26,783] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-06-26 20:59:26,783] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(framefeeder-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-06-26 20:59:26,783] DEBUG [Controller id=0] Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-06-26 20:59:26,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
